(sde:clear)

(define file_name "nanosheet_ns2_NMOS")
(define wsh 0.015)
(define tgm 0.010)
(define tgox 0.0008)
(define tghk 0.0005)
(define tsh 0.007)
(define cgp 0.042)
(define lsp 0.005)
(define Nsd 1e21)
(define Next 1e17)
(define Nch 1e16)
(define lg 0.014)

(define lc (- cgp (+ lg lsp lsp)))
(define ltot (+ lg lsp lsp lc lc))
(define lcsp (+ lc lsp))
(define wtot (+ wsh tgox tgox tghk tghk tgm tgm))
(define ttot (+ (* (+ tsh tgox tgox tghk tghk tgm) 2)  tgm))
(define tstep (+ tsh tgox tgox tghk tghk tgm))

(define A (sdegeo:create-cuboid (position 0 lcsp 0) (position ttot (- ltot lcsp) wtot) "Metal" "GMA"))
(define B1 (sdegeo:create-cuboid (position tgm lcsp tgm) (position (- ttot (+ tstep tgm)) (- ltot lcsp) (- wtot tgm)) "Metal" "GMB1"))
(define B2 (sdegeo:create-cuboid (position (+ tgm tstep)  lcsp tgm) (position (- ttot tgm) (- ltot lcsp) (- wtot tgm)) "Metal" "GMB2"))
(sdegeo:bool-subtract (list A B1 B2))

(define A (sdegeo:create-cuboid (position tgm lcsp tgm) (position (- ttot (+ tstep tgm)) (- ltot lcsp) (- wtot tgm)) "HfO2" "GHKA1"))
(define B (sdegeo:create-cuboid (position (+ tgm tghk) lcsp (+ tgm tghk)) (position (- ttot (+ tstep tgm) tghk) (- ltot lcsp) (- wtot tgm tghk)) "HfO2" "GHKB1"))
(sdegeo:bool-subtract (list A B))
(define A (sdegeo:create-cuboid (position (+ tgm tstep) lcsp tgm) (position (- ttot  tgm) (- ltot lcsp) (- wtot tgm)) "HfO2" "GHKA2"))
(define B (sdegeo:create-cuboid (position (+ (+ tgm tstep) tghk) lcsp (+ tgm tghk)) (position (- ttot tgm tghk) (- ltot lcsp) (- wtot tgm tghk)) "HfO2" "GHKB2"))
(sdegeo:bool-subtract (list A B))

(define A (sdegeo:create-cuboid (position (+ tgm tghk) lcsp (+ tgm tghk)) (position (- ttot (+ tstep tgm) tghk) (- ltot lcsp) (- wtot tgm tghk)) "SiO2" "GOXA1"))
(define B (sdegeo:create-cuboid (position (+ tgm tghk tgox) lcsp (+ tgm tghk tgox)) (position (- ttot (+ tstep tgm) tghk tgox) (- ltot lcsp) (- wtot tgm tghk tgox)) "SiO2" "GOXB1"))
(sdegeo:bool-subtract (list A B))
(define A (sdegeo:create-cuboid (position (+ (+ tgm tstep) tghk) lcsp (+ tgm tghk)) (position (- ttot tgm tghk) (- ltot lcsp) (- wtot tgm tghk)) "SiO2" "GOXA2"))
(define B (sdegeo:create-cuboid (position (+ (+ tgm tstep) tghk tgox) lcsp (+ tgm tghk tgox)) (position (- ttot tgm tghk tgox) (- ltot lcsp) (- wtot tgm tghk tgox)) "SiO2" "GOXB2"))
(sdegeo:bool-subtract (list A B))

(sdegeo:create-cuboid (position (+ tgm tghk tgox) lcsp (+ tgm tghk tgox)) (position (- ttot (+ tstep tgm) tghk tgox) (- ltot lcsp) (- wtot tgm tghk tgox)) "Silicon" "CH1")
(sdegeo:create-cuboid (position (+ (+ tgm tstep) tghk tgox) lcsp (+ tgm tghk tgox)) (position (- ttot tgm tghk tgox) (- ltot lcsp) (- wtot tgm tghk tgox)) "Silicon" "CH2")

(define A (sdegeo:create-cuboid (position 0 lc 0) (position ttot lcsp wtot) "SiO2" "SPSOXA"))
(define B1 (sdegeo:create-cuboid (position (+ tgm tghk tgox) lc (+ tgm tghk tgox)) (position (- ttot (+ tgm tstep) tghk tgox) lcsp (- wtot tgm tghk tgox)) "SiO2" "SPSOXB1"))
(define B2 (sdegeo:create-cuboid (position (+ (+ tgm tstep) tghk tgox) lc (+ tgm tghk tgox)) (position (- ttot tgm tghk tgox) lcsp (- wtot tgm tghk tgox)) "SiO2" "SPSOXB2"))
(sdegeo:bool-subtract (list A B1 B2))

(define A (sdegeo:create-cuboid (position 0 (- ltot lcsp) 0) (position ttot (- ltot lc) wtot) "SiO2" "SPDOXA"))
(define B1 (sdegeo:create-cuboid (position (+ tgm tghk tgox) (- ltot lcsp) (+ tgm tghk tgox)) (position (- ttot (+ tgm tstep) tghk tgox) (- ltot lc) (- wtot tgm tghk tgox)) "SiO2" "SPDOXB1"))
(define B2 (sdegeo:create-cuboid (position (+ (+ tgm tstep) tghk tgox) (- ltot lcsp) (+ tgm tghk tgox)) (position (- ttot tgm tghk tgox) (- ltot lc) (- wtot tgm tghk tgox)) "SiO2" "SPDOXB2"))
(sdegeo:bool-subtract (list A B1 B2))

(sdegeo:create-cuboid (position (+ tgm tghk tgox) lc (+ tgm tghk tgox)) (position (- ttot (+ tgm tstep) tghk tgox) lcsp (- wtot tgm tghk tgox)) "Silicon" "SPS1")
(sdegeo:create-cuboid (position (+ tgm tghk tgox) (- ltot lcsp) (+ tgm tghk tgox)) (position (- ttot (+ tgm tstep) tghk tgox) (- ltot lc) (- wtot tgm tghk tgox)) "Silicon" "SPD1")
(sdegeo:create-cuboid (position (+ (+ tgm tstep) tghk tgox) lc (+ tgm tghk tgox)) (position (- ttot tgm tghk tgox) lcsp (- wtot tgm tghk tgox)) "Silicon" "SPS2")
(sdegeo:create-cuboid (position (+ (+ tgm tstep) tghk tgox) (- ltot lcsp) (+ tgm tghk tgox)) (position (- ttot tgm tghk tgox) (- ltot lc) (- wtot tgm tghk tgox)) "Silicon" "SPD2")

(sdegeo:create-cuboid (position 0 0 0) (position ttot lc wtot) "Silicon" "CS")
(sdegeo:create-cuboid (position 0 (- ltot lc) 0) (position ttot ltot wtot) "Silicon" "CD")

(sdedr:define-refeval-window "RW_All" "Cuboid" (position 0 0 0) (position ttot ltot wtot))
(sdedr:define-refeval-window "RW_NS" "Cuboid" (position 0 0 0) (position ttot lc wtot))
(sdedr:define-refeval-window "RW_ND" "Cuboid" (position 0 (- ltot lc) 0) (position ttot ltot wtot))
(sdedr:define-refeval-window "RW_Mid1" "Cuboid" (position tgm 0 tgm) (position (- ttot (+ tstep tgm)) (- ltot 0) (- wtot tgm)))
(sdedr:define-refeval-window "RW_Mid2" "Cuboid" (position (+ tgm tstep) 0 tgm) (position (- ttot tgm) (- ltot 0) (- wtot tgm)))
(sdedr:define-refeval-window "RW_CH1" "Cuboid" (position tgm lcsp tgm) (position (- ttot (+ tstep tgm)) (- ltot lcsp) (- wtot tgm)))
(sdedr:define-refeval-window "RW_CH2" "Cuboid" (position (+ tgm tstep) lcsp tgm) (position (- ttot tgm) (- ltot lcsp) (- wtot tgm)))
(sdedr:define-refeval-window "RW_Next11" "Cuboid" (position tgm lc tgm) (position (- ttot (+ tstep tgm)) lcsp (- wtot tgm)))
(sdedr:define-refeval-window "RW_Next12" "Cuboid" (position tgm (- ltot lcsp) tgm) (position (- ttot (+ tstep tgm)) (- ltot lc) (- wtot tgm)))
(sdedr:define-refeval-window "RW_Next21" "Cuboid" (position (+ tgm tstep) lc tgm) (position (- ttot tgm) lcsp (- wtot tgm)))
(sdedr:define-refeval-window "RW_Next22" "Cuboid" (position (+ tgm tstep) (- ltot lcsp) tgm) (position (- ttot tgm) (- ltot lc) (- wtot tgm)))

(sdedr:define-constant-profile "Dop_NS" "ArsenicActiveConcentration" Nsd)
(sdedr:define-constant-profile-placement "Dop_PL_NS" "Dop_NS" "RW_NS")
(sdedr:define-constant-profile "Dop_ND" "ArsenicActiveConcentration" Nsd)
(sdedr:define-constant-profile-placement "Dop_PL_ND" "Dop_ND" "RW_ND")
(sdedr:define-constant-profile "Dop_NCH1" "BoronActiveConcentration" Nch)
(sdedr:define-constant-profile-placement "Dop_PL_NCH1" "Dop_NCH1" "RW_CH1")
(sdedr:define-constant-profile "Dop_NCH2" "BoronActiveConcentration" Nch)
(sdedr:define-constant-profile-placement "Dop_PL_NCH2" "Dop_NCH2" "RW_CH2")
(sdedr:define-constant-profile "Dop_Next11" "ArsenicActiveConcentration" Next)
(sdedr:define-constant-profile-placement "Dop_PL_Next11" "Dop_Next11" "RW_Next11")
(sdedr:define-constant-profile "Dop_Next12" "ArsenicActiveConcentration" Next)
(sdedr:define-constant-profile-placement "Dop_PL_Next12" "Dop_Next12" "RW_Next12")
(sdedr:define-constant-profile "Dop_Next21" "ArsenicActiveConcentration" Next)
(sdedr:define-constant-profile-placement "Dop_PL_Next21" "Dop_Next21" "RW_Next21")
(sdedr:define-constant-profile "Dop_Next22" "ArsenicActiveConcentration" Next)
(sdedr:define-constant-profile-placement "Dop_PL_Next22" "Dop_Next22" "RW_Next22")

(sdegeo:set-contact (find-face-id (position 0 (/ lc 2) (/ wtot 2))) "Source")
(sdegeo:set-contact (find-face-id (position 0 (- ltot (/ lc 2)) (/ wtot 2))) "Drain")
(sdegeo:set-contact (find-face-id (position 0 (/ ltot 2) (/ wtot 2))) "Gate")

(sdedr:define-refinement-size "Msh_All" 0.002 0.005 0.002 0.001 0.001 0.001)
(sdedr:define-refinement-placement "Msh_PL_All" "Msh_All" "RW_All" )
(sdedr:define-refinement-size "Msh_Mid1" 0.001 0.001 0.001 0.001 0.001 0.001)
(sdedr:define-refinement-placement "Msh_PL_Mid1" "Msh_Mid1" "RW_Mid1" )
(sdedr:define-refinement-size "Msh_CH1" 0.001 0.001 0.001 0.001 0.001 0.001)
(sdedr:define-refinement-placement "Msh_PL_CH1" "Msh_CH1" "RW_CH1" )
(sdedr:define-refinement-size "Msh_Mid2" 0.001 0.001 0.001 0.001 0.001 0.001)
(sdedr:define-refinement-placement "Msh_PL_Mid2" "Msh_Mid2" "RW_Mid2" )
(sdedr:define-refinement-size "Msh_CH2" 0.001 0.001 0.001 0.001 0.001 0.001)
(sdedr:define-refinement-placement "Msh_PL_CH2" "Msh_CH2" "RW_CH2" )

(sde:build-mesh "mesh" "-d" file_name)
